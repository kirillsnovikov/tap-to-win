/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as AppImport } from './routes/_app';

// Create Virtual Routes

const AppIndexLazyImport = createFileRoute('/_app/')();
const AppRewardLazyImport = createFileRoute('/_app/reward')();
const AppFriendsLazyImport = createFileRoute('/_app/friends')();
const AppEarnIndexLazyImport = createFileRoute('/_app/earn/')();

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any);

const AppIndexLazyRoute = AppIndexLazyImport.update({
  path: '/',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/_app/index.lazy').then((d) => d.Route));

const AppRewardLazyRoute = AppRewardLazyImport.update({
  path: '/reward',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/_app/reward.lazy').then((d) => d.Route));

const AppFriendsLazyRoute = AppFriendsLazyImport.update({
  path: '/friends',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/_app/friends.lazy').then((d) => d.Route));

const AppEarnIndexLazyRoute = AppEarnIndexLazyImport.update({
  path: '/earn/',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/_app/earn/index.lazy').then((d) => d.Route));

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof AppImport;
      parentRoute: typeof rootRoute;
    };
    '/_app/friends': {
      id: '/_app/friends';
      path: '/friends';
      fullPath: '/friends';
      preLoaderRoute: typeof AppFriendsLazyImport;
      parentRoute: typeof AppImport;
    };
    '/_app/reward': {
      id: '/_app/reward';
      path: '/reward';
      fullPath: '/reward';
      preLoaderRoute: typeof AppRewardLazyImport;
      parentRoute: typeof AppImport;
    };
    '/_app/': {
      id: '/_app/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof AppIndexLazyImport;
      parentRoute: typeof AppImport;
    };
    '/_app/earn/': {
      id: '/_app/earn/';
      path: '/earn';
      fullPath: '/earn';
      preLoaderRoute: typeof AppEarnIndexLazyImport;
      parentRoute: typeof AppImport;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AppRoute: AppRoute.addChildren({
    AppFriendsLazyRoute,
    AppRewardLazyRoute,
    AppIndexLazyRoute,
    AppEarnIndexLazyRoute,
  }),
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/friends",
        "/_app/reward",
        "/_app/",
        "/_app/earn/"
      ]
    },
    "/_app/friends": {
      "filePath": "_app/friends.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/reward": {
      "filePath": "_app/reward.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/earn/": {
      "filePath": "_app/earn/index.lazy.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
